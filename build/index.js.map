{"version":3,"sources":["../src/index.js"],"names":["redisConfig","env","process","configApproved","Object","prototype","hasOwnProperty","call","REDIS_HOST","console","log","REDIS_PORT","REDIS_FAMILY","REDIS_PASSWORD","REDIS_DB","REDIS_SLAVES","split","exit","redis","Redis","REDIS_URI","$","set","PLUGIN_DEBUG","redisLoadBalance","LoadBalance","e","message","reject"],"mappings":";;;;;;AAAA;;;;AACA;;;;AAEA;;;;;;0EAEe;AAAA;AAAA;AAAA;AAAA;AAAA;AACX,wBAAG;AACKA,mCADL,GACmB,EADnB;AAEKC,2BAFL,GAEWC,QAAQD,GAFnB;AAGKE,sCAHL,GAGsB,IAHtB;;AAKC;;AAEA,4BAAGC,OAAOC,SAAP,CAAiBC,cAAjB,CAAgCC,IAAhC,CAAqCN,GAArC,EAA0C,YAA1C,KAA2D,CAAC,CAACA,IAAIO,UAApE,EACIR,YAAY,MAAZ,IAAsBC,IAAIO,UAA1B,CADJ,KAEK;AACDL,6CAAiB,KAAjB;AACAM,oCAAQC,GAAR,CAAY,qEAAZ;AACH;;AAED,4BAAGN,OAAOC,SAAP,CAAiBC,cAAjB,CAAgCC,IAAhC,CAAqCN,GAArC,EAA0C,YAA1C,KAA2D,CAAC,CAACA,IAAIU,UAApE,EACIX,YAAY,MAAZ,IAAsBC,IAAIU,UAA1B,CADJ,KAEK;AACDR,6CAAiB,KAAjB;AACAM,oCAAQC,GAAR,CAAY,qEAAZ;AACH;;AAED,4BAAGN,OAAOC,SAAP,CAAiBC,cAAjB,CAAgCC,IAAhC,CAAqCN,GAArC,EAA0C,cAA1C,KAA6D,CAAC,CAACA,IAAIW,YAAtE,EACIZ,YAAY,QAAZ,IAAwBC,IAAIW,YAA5B;;AAEJ,4BAAGR,OAAOC,SAAP,CAAiBC,cAAjB,CAAgCC,IAAhC,CAAqCN,GAArC,EAA0C,gBAA1C,KAA+D,CAAC,CAACA,IAAIY,cAAxE,EACIb,YAAY,UAAZ,IAA0BC,IAAIY,cAA9B;;AAEJ,4BAAGT,OAAOC,SAAP,CAAiBC,cAAjB,CAAgCC,IAAhC,CAAqCN,GAArC,EAA0C,UAA1C,KAAyD,CAAC,CAACA,IAAIa,QAAlE,EACId,YAAY,IAAZ,IAAoBC,IAAIa,QAAxB;;AAEJ,4BAAGV,OAAOC,SAAP,CAAiBC,cAAjB,CAAgCC,IAAhC,CAAqCN,GAArC,EAA0C,cAA1C,KAA6D,CAAC,CAACA,IAAIc,YAAtE,EACIf,YAAY,QAAZ,IAAwBC,IAAIc,YAAJ,CAAiBC,KAAjB,CAAuB,GAAvB,CAAxB;;AAEJ,4BAAG,CAACb,cAAJ,EAAmB;AACfM,oCAAQC,GAAR,CAAY,uFAAZ;AACAR,oCAAQe,IAAR,CAAa,CAAC,CAAd;AACH,yBAHD,MAIK;AACD,gCAAI;AACIC,qCADJ,GACad,OAAOC,SAAP,CAAiBC,cAAjB,CAAgCC,IAAhC,CAAqCN,GAArC,EAA0C,WAA1C,CAAD,GAA2D,IAAIkB,eAAJ,CAAUlB,IAAImB,SAAd,CAA3D,GAAsF,IAAID,eAAJ,CAAUnB,WAAV,CADlG;;;AAGA,oCAAGkB,KAAH,EACIG,SAAEC,GAAF,CAAM,OAAN,EAAeJ,KAAf;;AAEJ,oCAAGjB,IAAIsB,YAAJ,IAAoB,MAApB,IAA8BL,KAAjC,EACIT,QAAQC,GAAR;;AAEJ,oCAAGN,OAAOC,SAAP,CAAiBC,cAAjB,CAAgCC,IAAhC,CAAqCN,GAArC,EAA0C,cAA1C,CAAH,EAA6D;AACrDuB,oDADqD,GAClC,IAAIC,qBAAJ,CAAgBzB,YAAY,QAAZ,CAAhB,CADkC;;AAEzDqB,6CAAEC,GAAF,CAAM,SAAN,EAAiBE,gBAAjB;AACH;AACJ,6BAbD,CAcA,OAAOE,CAAP,EAAU;AACNjB,wCAAQC,GAAR,yBAAkCgB,EAAEC,OAApC;AACH;AACJ;AACJ,qBAxDD,CAyDA,OAAMD,CAAN,EAAQ;AACJjB,gCAAQC,GAAR,yBAAkCgB,EAAEC,OAApC;AACAC;AACH;;AA7DU;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,C","file":"index.js","sourcesContent":["import Redis from \"./Redis\";\nimport LoadBalance from \"./LoadBalance\";\n\nimport { $ } from \"@dekproject/scope\";\n\nexport default async () => {\n    try{\n        let redisConfig = {};\n        let env = process.env;\n        let configApproved = true;\n\n        // Check the existence of the parameters below in .env\n\n        if(Object.prototype.hasOwnProperty.call(env, \"REDIS_HOST\") && !!env.REDIS_HOST)\n            redisConfig['host'] = env.REDIS_HOST;\n        else {\n            configApproved = false;\n            console.log('[ Redis Plugin ] - There is no REDIS_HOST variable in the .env file');\n        }\n\n        if(Object.prototype.hasOwnProperty.call(env, \"REDIS_PORT\") && !!env.REDIS_PORT)\n            redisConfig['port'] = env.REDIS_PORT;\n        else {\n            configApproved = false;\n            console.log('[ Redis Plugin ] - There is no REDIS_PORT variable in the .env file');\n        }\n\n        if(Object.prototype.hasOwnProperty.call(env, \"REDIS_FAMILY\") && !!env.REDIS_FAMILY)\n            redisConfig['family'] = env.REDIS_FAMILY;\n\n        if(Object.prototype.hasOwnProperty.call(env, \"REDIS_PASSWORD\") && !!env.REDIS_PASSWORD)\n            redisConfig['password'] = env.REDIS_PASSWORD;\n\n        if(Object.prototype.hasOwnProperty.call(env, \"REDIS_DB\") && !!env.REDIS_DB)\n            redisConfig['db'] = env.REDIS_DB;\n\n        if(Object.prototype.hasOwnProperty.call(env, \"REDIS_SLAVES\") && !!env.REDIS_SLAVES)\n            redisConfig['slaves'] = env.REDIS_SLAVES.split(\",\");\n\n        if(!configApproved){\n            console.log('[ Redis Plugin ] - Please correct the above errors before restarting the application.')\n            process.exit(-1);\n        }\n        else {\n            try {\n                let redis = (Object.prototype.hasOwnProperty.call(env, \"REDIS_URI\")) ? new Redis(env.REDIS_URI) : new Redis(redisConfig);\n\n                if(redis)\n                    $.set(\"redis\", redis);\n                \n                if(env.PLUGIN_DEBUG == 'true' && redis)\n                    console.log(`[ Redis Plugin ] - Successfully signed`);            \n\n                if(Object.prototype.hasOwnProperty.call(env, \"REDIS_SLAVES\")){\n                    let redisLoadBalance = new LoadBalance(redisConfig['slaves']);\n                    $.set(\"redislb\", redisLoadBalance);\n                }\n            }\n            catch (e) {\n                console.log(`[ Redis Plugin ] - ${e.message}`);\n            }\n        }\n    }\n    catch(e){\n        console.log(`[ Redis Plugin ] - ${e.message}`);\n        reject();\n    }\n}\n"]}