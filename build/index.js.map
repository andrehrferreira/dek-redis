{"version":3,"sources":["../src/index.js"],"names":["redisConfig","env","process","configApproved","hasOwnProperty","REDIS_HOST","console","log","REDIS_PORT","REDIS_FAMILY","REDIS_PASSWORD","REDIS_DB","exit","redis","Redis","PLUGIN_DEBUG","$","set","e","message","reject"],"mappings":";;;;;;AAAA;;AACA;;;;;;;;0EAEe;AAAA;AAAA;AAAA;AAAA;AAAA;AACX,wBAAG;AACKA,mCADL,GACmB,EADnB;AAEKC,2BAFL,GAEWC,QAAQD,GAFnB;AAGKE,sCAHL,GAGsB,IAHtB;;AAKC;;AAEA,4BAAGF,IAAIG,cAAJ,CAAmB,YAAnB,KAAoC,CAAC,CAACH,IAAII,UAA7C,EACIL,YAAY,MAAZ,IAAsBC,IAAII,UAA1B,CADJ,KAEK;AACDF,6CAAiB,KAAjB;AACAG,oCAAQC,GAAR,CAAY,qEAAZ;AACH;;AAED,4BAAGN,IAAIG,cAAJ,CAAmB,YAAnB,KAAoC,CAAC,CAACH,IAAIO,UAA7C,EACIR,YAAY,MAAZ,IAAsBC,IAAIO,UAA1B,CADJ,KAEK;AACDL,6CAAiB,KAAjB;AACAG,oCAAQC,GAAR,CAAY,qEAAZ;AACH;;AAED,4BAAGN,IAAIG,cAAJ,CAAmB,cAAnB,KAAsC,CAAC,CAACH,IAAIQ,YAA/C,EACIT,YAAY,QAAZ,IAAwBC,IAAIQ,YAA5B;;AAEJ,4BAAGR,IAAIG,cAAJ,CAAmB,gBAAnB,KAAwC,CAAC,CAACH,IAAIS,cAAjD,EACIV,YAAY,UAAZ,IAA0BC,IAAIS,cAA9B;;AAEJ,4BAAGT,IAAIG,cAAJ,CAAmB,UAAnB,KAAkC,CAAC,CAACH,IAAIU,QAA3C,EACIX,YAAY,IAAZ,IAAoBC,IAAIU,QAAxB;;AAEJ,4BAAG,CAACR,cAAJ,EAAmB;AACfG,oCAAQC,GAAR,CAAY,uFAAZ;AACAL,oCAAQU,IAAR,CAAa,CAAC,CAAd;AACH,yBAHD,MAIK;AACD,gCAAI;AACIC,qCADJ,GACY,IAAIC,iBAAJ,CAAUd,WAAV,CADZ;;;AAGA,oCAAGC,IAAIc,YAAJ,IAAoB,MAAvB,EACIT,QAAQC,GAAR;;AAEJS,yCAAEC,GAAF,CAAM,OAAN,EAAeJ,KAAf;AACH,6BAPD,CAQA,OAAOK,CAAP,EAAU;AACNZ,wCAAQC,GAAR,yBAAkCW,EAAEC,OAApC;AACH;AACJ;AACJ,qBA/CD,CAgDA,OAAMD,CAAN,EAAQ;AACJZ,gCAAQC,GAAR,yBAAkCW,EAAEC,OAApC;AACAC;AACH;;AApDU;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,C","file":"index.js","sourcesContent":["import { $ } from \"@dekproject/scope\";\nimport Redis from \"ioredis\";\n\nexport default async () => {\n    try{\n        let redisConfig = {};\n        let env = process.env;\n        let configApproved = true;\n\n        // Check the existence of the parameters below in .env\n\n        if(env.hasOwnProperty('REDIS_HOST') && !!env.REDIS_HOST)\n            redisConfig['host'] = env.REDIS_HOST;\n        else {\n            configApproved = false;\n            console.log('[ Redis Plugin ] - There is no REDIS_HOST variable in the .env file');\n        }\n\n        if(env.hasOwnProperty('REDIS_PORT') && !!env.REDIS_PORT)\n            redisConfig['port'] = env.REDIS_PORT;\n        else {\n            configApproved = false;\n            console.log('[ Redis Plugin ] - There is no REDIS_PORT variable in the .env file');\n        }\n\n        if(env.hasOwnProperty('REDIS_FAMILY') && !!env.REDIS_FAMILY)\n            redisConfig['family'] = env.REDIS_FAMILY;\n\n        if(env.hasOwnProperty('REDIS_PASSWORD') && !!env.REDIS_PASSWORD)\n            redisConfig['password'] = env.REDIS_PASSWORD;\n\n        if(env.hasOwnProperty('REDIS_DB') && !!env.REDIS_DB)\n            redisConfig['db'] = env.REDIS_DB;\n\n        if(!configApproved){\n            console.log('[ Redis Plugin ] - Please correct the above errors before restarting the application.')\n            process.exit(-1);\n        }\n        else {\n            try {\n                let redis = new Redis(redisConfig);\n\n                if(env.PLUGIN_DEBUG == 'true')\n                    console.log(`[ Redis Plugin ] - Successfully signed`);\n\n                $.set(\"redis\", redis);\n            }\n            catch (e) {\n                console.log(`[ Redis Plugin ] - ${e.message}`);\n            }\n        }\n    }\n    catch(e){\n        console.log(`[ Redis Plugin ] - ${e.message}`);\n        reject();\n    }\n}\n"]}