{"version":3,"sources":["../src/index.js"],"names":["Promise","resolve","reject","redisConfig","env","process","configApproved","hasOwnProperty","REDIS_HOST","console","log","REDIS_PORT","REDIS_FAMILY","REDIS_PASSWORD","REDIS_DB","exit","redis","Redis","PLUGIN_DEBUG","$","set","e","message"],"mappings":";;;;;;AAAA;;AACA;;;;;;;;0EAEe;AAAA;AAAA;AAAA;AAAA;AAAA,sDACJ,IAAIA,OAAJ;AAAA,4FAAY,iBAAOC,OAAP,EAAgBC,MAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AACf,gDAAG;AACKC,2DADL,GACmB,EADnB;AAEKC,mDAFL,GAEWC,QAAQD,GAFnB;AAGKE,8DAHL,GAGsB,IAHtB;;AAKC;;AAEA,oDAAGF,IAAIG,cAAJ,CAAmB,YAAnB,KAAoC,CAAC,CAACH,IAAII,UAA7C,EACIL,YAAY,MAAZ,IAAsBC,IAAII,UAA1B,CADJ,KAEK;AACDF,qEAAiB,KAAjB;AACAG,4DAAQC,GAAR,CAAY,qEAAZ;AACH;;AAED,oDAAGN,IAAIG,cAAJ,CAAmB,YAAnB,KAAoC,CAAC,CAACH,IAAIO,UAA7C,EACIR,YAAY,MAAZ,IAAsBC,IAAIO,UAA1B,CADJ,KAEK;AACDL,qEAAiB,KAAjB;AACAG,4DAAQC,GAAR,CAAY,qEAAZ;AACH;;AAED,oDAAGN,IAAIG,cAAJ,CAAmB,cAAnB,KAAsC,CAAC,CAACH,IAAIQ,YAA/C,EACIT,YAAY,QAAZ,IAAwBC,IAAIQ,YAA5B;;AAEJ,oDAAGR,IAAIG,cAAJ,CAAmB,gBAAnB,KAAwC,CAAC,CAACH,IAAIS,cAAjD,EACIV,YAAY,UAAZ,IAA0BC,IAAIS,cAA9B;;AAEJ,oDAAGT,IAAIG,cAAJ,CAAmB,UAAnB,KAAkC,CAAC,CAACH,IAAIU,QAA3C,EACIX,YAAY,IAAZ,IAAoBC,IAAIU,QAAxB;;AAEJ,oDAAG,CAACR,cAAJ,EAAmB;AACfG,4DAAQC,GAAR,CAAY,uFAAZ;AACAL,4DAAQU,IAAR,CAAa,CAAC,CAAd;AACH,iDAHD,MAIK;AACD,wDAAI;AACIC,6DADJ,GACY,IAAIC,iBAAJ,CAAUd,WAAV,CADZ;;;AAGA,4DAAGC,IAAIc,YAAJ,IAAoB,MAAvB,EACIT,QAAQC,GAAR;;AAEJS,iEAAEC,GAAF,CAAM,OAAN,EAAeJ,KAAf;AACAf;AACH,qDARD,CASA,OAAOoB,CAAP,EAAU;AACNZ,gEAAQC,GAAR,yBAAkCW,EAAEC,OAApC;AACApB;AACH;AACJ;AACJ,6CAjDD,CAkDA,OAAMmB,CAAN,EAAQ;AACJZ,wDAAQC,GAAR,yBAAkCW,EAAEC,OAApC;AACApB;AACH;;AAtDc;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,yBAAZ;;AAAA;AAAA;AAAA;AAAA,wBADI;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,C","file":"index.js","sourcesContent":["import { $ } from \"@dekproject/scope\";\nimport Redis from \"ioredis\";\n\nexport default async () => {\n    return new Promise(async (resolve, reject) => {\n        try{\n            let redisConfig = {};\n            let env = process.env;\n            let configApproved = true;\n\n            // Check the existence of the parameters below in .env\n\n            if(env.hasOwnProperty('REDIS_HOST') && !!env.REDIS_HOST)\n                redisConfig['host'] = env.REDIS_HOST;\n            else {\n                configApproved = false;\n                console.log('[ Redis Plugin ] - There is no REDIS_HOST variable in the .env file');\n            }\n\n            if(env.hasOwnProperty('REDIS_PORT') && !!env.REDIS_PORT)\n                redisConfig['port'] = env.REDIS_PORT;\n            else {\n                configApproved = false;\n                console.log('[ Redis Plugin ] - There is no REDIS_PORT variable in the .env file');\n            }\n\n            if(env.hasOwnProperty('REDIS_FAMILY') && !!env.REDIS_FAMILY)\n                redisConfig['family'] = env.REDIS_FAMILY;\n\n            if(env.hasOwnProperty('REDIS_PASSWORD') && !!env.REDIS_PASSWORD)\n                redisConfig['password'] = env.REDIS_PASSWORD;\n\n            if(env.hasOwnProperty('REDIS_DB') && !!env.REDIS_DB)\n                redisConfig['db'] = env.REDIS_DB;\n\n            if(!configApproved){\n                console.log('[ Redis Plugin ] - Please correct the above errors before restarting the application.')\n                process.exit(-1);\n            }\n            else {\n                try {\n                    let redis = new Redis(redisConfig);\n\n                    if(env.PLUGIN_DEBUG == 'true')\n                        console.log(`[ Redis Plugin ] - Successfully signed`);\n\n                    $.set(\"redis\", redis);\n                    resolve();\n                }\n                catch (e) {\n                    console.log(`[ Redis Plugin ] - ${e.message}`);\n                    reject();\n                }\n            }\n        }\n        catch(e){\n            console.log(`[ Redis Plugin ] - ${e.message}`);\n            reject();\n        }\n    });\n}\n"]}