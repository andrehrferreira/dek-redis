{"version":3,"sources":["../src/index.js"],"names":["redisConfig","env","process","configApproved","Object","prototype","hasOwnProperty","call","REDIS_HOST","console","log","REDIS_PORT","REDIS_FAMILY","REDIS_PASSWORD","REDIS_DB","REDIS_SLAVES","split","exit","redis","Redis","REDIS_URI","$","set","PLUGIN_DEBUG","redisLoadBalance","LoadBalance","REDIS_KEYS_HOST","REDIS_KEYS_PORT","redisKeys","e","message","reject"],"mappings":"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","file":"index.js","sourcesContent":["import Redis from \"./Redis\";\r\nimport LoadBalance from \"./LoadBalance\";\r\n\r\nimport { $ } from \"@dekproject/scope\";\r\n\r\nexport default async () => {\r\n    try{\r\n        let redisConfig = {};\r\n        let env = process.env;\r\n        let configApproved = true;\r\n\r\n        // Check the existence of the parameters below in .env\r\n\r\n        if(Object.prototype.hasOwnProperty.call(env, \"REDIS_HOST\") && !!env.REDIS_HOST)\r\n            redisConfig['host'] = env.REDIS_HOST;\r\n        else {\r\n            configApproved = false;\r\n            console.log('[ Redis Plugin ] - There is no REDIS_HOST variable in the .env file');\r\n        }\r\n\r\n        if(Object.prototype.hasOwnProperty.call(env, \"REDIS_PORT\") && !!env.REDIS_PORT)\r\n            redisConfig['port'] = env.REDIS_PORT;\r\n        else {\r\n            configApproved = false;\r\n            console.log('[ Redis Plugin ] - There is no REDIS_PORT variable in the .env file');\r\n        }\r\n\r\n        if(Object.prototype.hasOwnProperty.call(env, \"REDIS_FAMILY\") && !!env.REDIS_FAMILY)\r\n            redisConfig['family'] = env.REDIS_FAMILY;\r\n\r\n        if(Object.prototype.hasOwnProperty.call(env, \"REDIS_PASSWORD\") && !!env.REDIS_PASSWORD)\r\n            redisConfig['password'] = env.REDIS_PASSWORD;\r\n\r\n        if(Object.prototype.hasOwnProperty.call(env, \"REDIS_DB\") && !!env.REDIS_DB)\r\n            redisConfig['db'] = env.REDIS_DB;\r\n\r\n        if(Object.prototype.hasOwnProperty.call(env, \"REDIS_SLAVES\") && !!env.REDIS_SLAVES)\r\n            redisConfig['slaves'] = env.REDIS_SLAVES.split(\",\");\r\n\r\n        if(!configApproved){\r\n            console.log('[ Redis Plugin ] - Please correct the above errors before restarting the application.')\r\n            process.exit(-1);\r\n        }\r\n        else {\r\n            try {\r\n                let redis = (Object.prototype.hasOwnProperty.call(env, \"REDIS_URI\")) ? new Redis(env.REDIS_URI) : new Redis(redisConfig);\r\n\r\n                if(redis)\r\n                    $.set(\"redis\", redis);\r\n                \r\n                if(env.PLUGIN_DEBUG == 'true' && redis)\r\n                    console.log(`[ Redis Plugin ] - Successfully signed`);            \r\n\r\n                if(Object.prototype.hasOwnProperty.call(env, \"REDIS_SLAVES\")){\r\n                    let redisLoadBalance = new LoadBalance(redisConfig['slaves']);\r\n                    $.set(\"redislb\", redisLoadBalance);\r\n                }\r\n                if(Object.prototype.hasOwnProperty.call(env, \"REDIS_KEYS_HOST\")){\r\n                    redisConfig[\"host\"] = env.REDIS_KEYS_HOST;\r\n                    redisConfig[\"port\"] = env.REDIS_KEYS_PORT || env.REDIS_PORT;;\r\n                    let redisKeys = new Redis(redisConfig)\r\n                    $.set(\"rediskeys\", redisKeys);\r\n                }\r\n            }\r\n            catch (e) {\r\n                console.log(`[ Redis Plugin ] - ${e.message}`);\r\n            }\r\n        }\r\n    }\r\n    catch(e){\r\n        console.log(`[ Redis Plugin ] - ${e.message}`);\r\n        reject();\r\n    }\r\n}\r\n"]}